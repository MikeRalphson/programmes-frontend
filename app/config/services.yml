parameters:
    guzzle.factory.group: 'aws'
    app.default_locale: 'en_GB'
    app.orbit_client.class: BBC\BrandingClient\OrbitClient
    app.orbit_client.env: 'test'
    app.branding_client.class: BBC\BrandingClient\BrandingClient
    app.branding_client.env: 'test'

services:

    _defaults:
        autowire: true
        public: false

    _instanceof:
        Symfony\Component\Console\Command\Command:
            tags: ['console.command']
            public: true  # Mandatory

        Twig_ExtensionInterface:
            tags: ['twig.extension']

        Symfony\Component\EventDispatcher\EventSubscriberInterface:
            tags: ['kernel.event_subscriber']

        Symfony\Component\Form\FormTypeInterface:
            tags: ['form.type']

    App\:
        resource: '../../src/{Command,EventSubscriber,Twig}'

    App\Controller\:
        resource: '../../src/Controller'
        public: true # Mandatory
        tags: ['controller.service_arguments']

    # TODO: Remove me once this type alias is defined in Symfony core
    Symfony\Component\Stopwatch\Stopwatch: { alias: debug.stopwatch }
    # TODO: Remve me once these type aliases are defined in DoctrineBundle
    # (They're already in master, we're just waiting on a new release > 1.6.7)
    Doctrine\DBAL\Driver\Connection: { alias: database_connection }
    Doctrine\ORM\EntityManagerInterface: { alias: doctrine.orm.entity_manager }

    ### Begin the services!

    # This needs to be triggered before the any existing default Resolvers,
    # the largest of which has a priority of 100
    App\ArgumentResolver\PidValueResolver:
        tags: [{name: 'controller.argument_value_resolver', priority: 125 }]

    # TODO: Work out how to pass through a SymfonyCache object wrapped in a
    # DoctrineProvider. So that we can see caching information in the profiler
    # panel that shall land in Symfony 3.3
    app.orbit_client:
        public: true
        class: '%app.orbit_client.class%'
        arguments:
            - '@csa_guzzle.client.default'
            - '@doctrine_cache.providers.app_page_chrome'
            - { env: '%app.orbit_client.env%' }

    # TODO: Work out how to pass through a SymfonyCache object wrapped in a
    # DoctrineProvider. So that we can see caching information in the profiler
    # panel that shall land in Symfony 3.3
    app.branding_client:
        public: true
        class: '%app.branding_client.class%'
        arguments:
            - '@csa_guzzle.client.default'
            - '@doctrine_cache.providers.app_page_chrome'
            - { env: '%app.branding_client.env%' }


    ### Translations

    app.translate_factory:
        public: true
        class: RMP\Translate\TranslateFactory
        arguments:
            - fallback_locale: 'en_GB'
              cachepath: '%kernel.cache_dir%/translations'
              domains: ['programmes']
              default_domain: 'programmes'
              debug: '%kernel.debug%'
              basepath: '%kernel.root_dir%/Resources/translations'

    RMP\Translate\Translate:
        autowire: false
        factory: ['@app.translate_factory', 'create']
        arguments: ['%app.default_locale%']

    ### Front end factories

    App\Ds2014\PresenterFactory:
        arguments: ['%app.default_locale%']

    ## Twig Extension

    # This needs to be public as we may end up injecting a new Translate
    # instance into it, if the programme options say the language should be one
    # other than the default
    App\Twig\DesignSystemPresenterExtension:
        public: true

    ### Monitoring

    App\EventSubscriber\MonitoringSubscriber:
        tags:
            - { name: 'kernel.event_subscriber' }
            - { name: 'monolog.logger', channel: 'app_access' }


    ### Programmes Service

    # Extended domain model injection for programmes service
    BBC\ProgrammesPagesService\Mapper\ProgrammesDbToDomain\MapperFactory:
        arguments:
            -
                AtozTitle: '\App\Domain\AtozTitle'

    # TODO see if repeating every service here can be replaced with prototype
    # services in Symfony 3.3: https://github.com/symfony/symfony/pull/21289
    BBC\ProgrammesPagesService\Service\ServiceFactory: ~

    BBC\ProgrammesPagesService\Service\NetworksService:
        autowire: false
        factory: [ '@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getNetworksService']

    BBC\ProgrammesPagesService\Service\ProgrammesService:
        autowire: false
        factory: [ '@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getProgrammesService']

    BBC\ProgrammesPagesService\Service\AtozTitlesService:
        autowire: false
        public: true
        factory: [ '@BBC\ProgrammesPagesService\Service\ServiceFactory', 'getAtozTitlesService']
